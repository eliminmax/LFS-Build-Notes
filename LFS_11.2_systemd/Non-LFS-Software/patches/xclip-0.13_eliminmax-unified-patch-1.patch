diff --unified --recursive xclip-0.13/ChangeLog xclip-0.13-patched/ChangeLog
--- xclip-0.13/ChangeLog	2016-09-13 03:09:12.000000000 -0400
+++ xclip-0.13-patched/ChangeLog	2023-01-11 23:31:10.213031712 -0500
@@ -26,7 +26,7 @@
     See https://github.com/astrand/xclip/issues/7
     
     Use his patch (but only keep code related to the rmlastnl option).
-    An new option "-rmlastnl" is added to remove the last newline character if present.
+    A new option "-rmlastnl" is added to remove the last newline character if present.
 
 commit e0828ad502287394f1a9ea40f52b5deb013204ad
 Author: hwangcc23 <hwangcc@csie.nctu.edu.tw>
@@ -155,7 +155,7 @@
 
 
 Version 0.08:
-	Remove all event loops from xclib fuctions, to allow xclib to be
+	Remove all event loops from xclib functions, to allow xclib to be
 	integrated into general-purpose event loops of other software more
 	easily.
 
@@ -169,7 +169,7 @@
 	Fixed a segfault problem with errperror in v0.06. Can't believe I
 	didn't notice it before I released it.
 
-	Cleaned up the code, hopefully for complete compatibilty with more C
+	Cleaned up the code, hopefully for complete compatibility with more C
 	compilers and platforms. xclip compiles without warning on my Debian
 	GNU/Linux development platform with gcc -Wall -W -pedantic -ansi
 	-Wtraditional -Wundef -Wshadow -Wpointer-arith -Wbad-function-cast
@@ -213,7 +213,7 @@
 	perhaps it xclib.c would be allow people to integrate the code into
 	their own projects easily.
 
-	All in all, a general cleanup (as I am now semi-competant with C), and
+	All in all, a general cleanup (as I am now semi-competent with C), and
 	complete support for the INCR mechanism.
 
 
@@ -244,7 +244,7 @@
 	Changed use of getopt_long_only to getopt_long, which should work
 	better with non-GNU platforms.
 	
-	Fixed segfault when given a non-existant file to read.
+	Fixed segfault when given a non-existent file to read.
 
 	Made Imakefile for use with xmkmf. This means that xclip should build
 	and install fairly nicely on any system with an X Consortium derived
diff --unified --recursive xclip-0.13/INSTALL xclip-0.13-patched/INSTALL
--- xclip-0.13/INSTALL	2016-09-13 03:09:12.000000000 -0400
+++ xclip-0.13-patched/INSTALL	2023-01-11 23:31:10.213031712 -0500
@@ -28,6 +28,14 @@
 development environment, make, etc. All of these should be available as
 packages for most useful distributions.
 
+For example, in Ubuntu 16.04 LTS you will need to install the following
+packages before the installation will succeed.
+
+libx11-dev
+libxmu-headers
+libxt-dev
+libxmu-dev
+
 PLATFORMS
 =========
 
@@ -50,5 +58,5 @@
 are working correctly after I make a change. However, I have included it to
 help out anyone who may be modifying the xclip code themselves.
 
-Basically, when you run xctest, you shouln't see any extra output from diff
-inbetween each test (because the input and output should be identical).
+Basically, when you run xctest, you shouldn't see any extra output from diff
+in between each test (because the input and output should be identical).
diff --unified --recursive xclip-0.13/README xclip-0.13-patched/README
--- xclip-0.13/README	2016-09-13 03:09:12.000000000 -0400
+++ xclip-0.13-patched/README	2023-01-11 23:31:02.717020032 -0500
@@ -97,7 +97,7 @@
 ==========
 
 For a good overview of what selections are about, have a look at 
-<http://www.freedesktop.org/standards/clipboards.txt>. Short version:
+<https://specifications.freedesktop.org/clipboards-spec/clipboards-latest.txt>. Short version:
 
 * XA_PRIMARY contains the last text you highlighted
 * Middle click pastes XA_PRIMARY
diff --unified --recursive xclip-0.13/xclib.c xclip-0.13-patched/xclib.c
--- xclip-0.13/xclib.c	2016-09-13 03:09:12.000000000 -0400
+++ xclip-0.13-patched/xclib.c	2023-01-11 23:31:10.217031718 -0500
@@ -28,7 +28,7 @@
 #include "xcprint.h"
 #include "xclib.h"
 
-/* check a pointer to allocater memory, print an error if it's null */
+/* check a pointer to allocated memory, print an error if it's null */
 void
 xcmemcheck(void *ptr)
 {
@@ -250,7 +250,7 @@
 
 	XFree(buffer);
 
-	/* if we have come this far, the propery contains
+	/* if we have come this far, the property contains
 	 * text, we know the size.
 	 */
 	XGetWindowProperty(dpy,
@@ -290,7 +290,7 @@
     return (0);
 }
 
-/* put data into a selection, in response to a SelecionRequest event from
+/* put data into a selection, in response to a SelectionRequest event from
  * another window (and any subsequent events relating to an INCR transfer).
  *
  * Arguments are:
@@ -360,7 +360,7 @@
 	/* reset position to 0 */
 	*pos = 0;
 
-	/* put the data into an property */
+	/* put the data into a property */
 	if (evt.xselectionrequest.target == targets) {
 	    Atom types[2] = { targets, target };
 
diff --unified --recursive xclip-0.13/xclip.1 xclip-0.13-patched/xclip.1
--- xclip-0.13/xclip.1	2016-09-13 03:09:12.000000000 -0400
+++ xclip-0.13-patched/xclip.1	2023-01-11 23:31:10.217031718 -0500
@@ -36,7 +36,7 @@
 when xclip is invoked in the in mode with output level set to silent (the defaults), the filter option will cause xclip to print the text piped to standard in back to standard out unmodified
 .TP
 \fB\-r\fR, \fB\-rmlastnl\fR
-when the last character of the selection is a newline character, remove it. Newline characters that are not the last character in the selection are not affected. If the selection does not end with a newline character, this option has no effect. This option is useful for copying one-line output of programs like \fBpwd\fR to the clipboard to paste it again into the command prompt without executing the line immideately due to the newline character \fBpwd\fR appends.
+when the last character of the selection is a newline character, remove it. Newline characters that are not the last character in the selection are not affected. If the selection does not end with a newline character, this option has no effect. This option is useful for copying one-line output of programs like \fBpwd\fR to the clipboard to paste it again into the command prompt without executing the line immediately due to the newline character \fBpwd\fR appends.
 .TP
 \fB\-l\fR, \fB\-loops\fR
 number of X selection requests (pastes into X applications) to wait for before exiting, with a value of 0 (default) causing xclip to wait for an unlimited number of requests until another application (possibly another invocation of xclip) takes ownership of the selection
diff --unified --recursive xclip-0.13/xclip-cutfile xclip-0.13-patched/xclip-cutfile
--- xclip-0.13/xclip-cutfile	2016-09-13 03:09:12.000000000 -0400
+++ xclip-0.13-patched/xclip-cutfile	2023-01-11 23:31:13.493036822 -0500
@@ -12,4 +12,4 @@
 if [ "x$1" = "x-p" ]; then
     shift
 fi
-rm "$@"
+rm -- "$@"
diff --unified --recursive xclip-0.13/xclip-pastefile xclip-0.13-patched/xclip-pastefile
--- xclip-0.13/xclip-pastefile	2016-09-13 03:09:12.000000000 -0400
+++ xclip-0.13-patched/xclip-pastefile	2023-01-11 23:30:52.073003448 -0500
@@ -4,4 +4,4 @@
     echo "Usage: $0" >&2
     exit 1
 fi
-xclip -selection secondary -o | gunzip -c | tar xv
+xclip -selection secondary -o | gunzip -c | tar xvf -
diff --unified --recursive xclip-0.13/xcprint.c xclip-0.13-patched/xcprint.c
--- xclip-0.13/xcprint.c	2016-09-13 03:09:12.000000000 -0400
+++ xclip-0.13-patched/xcprint.c	2023-01-11 23:31:10.217031718 -0500
@@ -48,7 +48,7 @@
 	    "\"secondary\", \"clipboard\" or \"buffer-cut\")\n"
 	    "      -noutf8      don't treat text as utf-8, use old unicode\n"
 	    "      -target      use the given target atom\n"
-	    "      -rmlastnl    remove the last newline charater if present\n"
+	    "      -rmlastnl    remove the last newline character if present\n"
 	    "      -version     version information\n"
 	    "      -silent      errors only, run in background (default)\n"
 	    "      -quiet       run in foreground, show what's happening\n"
@@ -80,13 +80,13 @@
 void
 errxdisplay(char *display)
 {
-    /* if the display wasn't specified, read it from the enviroment
+    /* if the display wasn't specified, read it from the environment
      * just like XOpenDisplay would
      */
     if (display == NULL)
 	display = getenv("DISPLAY");
 
-    fprintf(stderr, "Error: Can't open display: %s\n", display);
+    fprintf(stderr, "Error: Can't open display: %s\n", display ? display : "(null)");
     exit(EXIT_FAILURE);
 }
 
@@ -105,7 +105,7 @@
     /* start off with an empty string */
     msg_all = xcstrdup("");
 
-    /* start looping through the viariable arguments */
+    /* start looping through the variable arguments */
     va_start(ap, prf_tot);
 
     /* loop through each of the arguments */
@@ -119,7 +119,7 @@
 	msg_all = (char *) xcrealloc(msg_all, strlen(msg_all) + strlen(msg_cur) + sizeof(char)
 	    );
 
-	/* append the current message the the total message */
+	/* append the current message to the total message */
 	strcat(msg_all, msg_cur);
     }
     va_end(ap);
